{"version":3,"sources":["webpack:///C:/hsbc/projects/dashboard/src/app/app.component.ts","webpack:///C:/hsbc/projects/dashboard/src/app/dashboard/chat-service.ts","webpack:///C:/hsbc/projects/dashboard/src/app/dashboard/dashboard.component.ts","webpack:///C:/hsbc/projects/dashboard/src/app/jobs/jobs.component.ts","webpack:///C:/hsbc/projects/dashboard/src async","webpack:///C:/hsbc/projects/dashboard/src/main.ts","webpack:///C:/hsbc/projects/dashboard/src/app/app.module.ts","webpack:///C:/hsbc/projects/dashboard/src/app/app.routes.ts","webpack:///C:/hsbc/projects/dashboard/src/app/charts/doughtnut-chart.component.ts","webpack:///C:/hsbc/projects/dashboard/src/app/index.ts","webpack:///C:/hsbc/projects/dashboard/src/environments/environment.ts","webpack:///C:/hsbc/projects/dashboard/src/polyfills.ts","webpack:///C:/hsbc/projects/dashboard/src/app/app.component.css","webpack:///C:/hsbc/projects/dashboard/src/app/dashboard/dashboard.component.css","webpack:///C:/hsbc/projects/dashboard/src/app/jobs/jobs.component.css","webpack:///C:/hsbc/projects/dashboard/src/app/app.component.html","webpack:///C:/hsbc/projects/dashboard/src/app/charts/doughtnut-chart.component.html","webpack:///C:/hsbc/projects/dashboard/src/app/dashboard/dashboard.component.html","webpack:///C:/hsbc/projects/dashboard/src/app/jobs/jobs.component.html","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app works!';\r\n  constructor(private router : Router){\r\n    router.navigate(['/dashboard']);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/hsbc/projects/dashboard/src/app/app.component.ts","import { Observable } from 'rxjs/Observable';\r\nimport * as io from 'socket.io-client';\r\nimport {Http, Headers, RequestOptions} from \"@angular/http\";\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class ChatService {\r\n  //private url = 'http://localhost:3000';\r\n  private url = 'http://ec2-34-249-42-218.eu-west-1.compute.amazonaws.com:3000';\r\n  private mURL = 'https://westus.api.cognitive.microsoft.com/text/analytics/v2.0/sentiment';\r\n  private socket;\r\n\r\n  constructor(private http: Http){}\r\n\r\n  sendMessage(message){\r\n    this.socket.emit('add-message', message);\r\n  }\r\n\r\n  getMessages() {\r\n    let observable = new Observable(observer => {\r\n      this.socket = io(this.url);\r\n      this.socket.on('message', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n    return observable;\r\n  }\r\n\r\n  startStream(body){\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    this.http.post(this.url + '/tweets/start-stream',{keywords : body.join()},options).subscribe();\r\n    return;\r\n  }\r\n  sendMail(msg){\r\n    console.log(\"Sending Mail;\" );\r\n    console.log(msg);\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    this.http.post(this.url + '/tweets/send-mail',{text : msg},options).subscribe();\r\n    return;\r\n  }\r\n  stopStream(){\r\n    this.http.get(this.url + '/tweets/stop-stream').subscribe();\r\n    return;\r\n  }\r\n\r\n  getMicrosoftCogn(txt){\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    headers.append('Ocp-Apim-Subscription-Key', 'd220b2fb4b2b4f23a996993368ed3c69');\r\n    let options = new RequestOptions({ headers: headers });\r\n    let body = {\r\n      \"documents\": [\r\n        {\r\n          \"language\": \"en\",\r\n          \"id\": \"string\",\r\n          \"text\": \"This is amazing, it works like charm.\"\r\n        }\r\n      ]\r\n    };\r\n    this.http.post(this.mURL,body,options).subscribe(function (data) {\r\n      console.log(data);\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/hsbc/projects/dashboard/src/app/dashboard/chat-service.ts","import {Component, OnInit, OnDestroy, Input} from '@angular/core';\r\nimport {ChatService} from \"./chat-service\";\r\nimport * as _ from 'lodash';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  @Input()\r\n  public alerts: Array<IAlert> = [];\r\n\r\n  private backup: Array<IAlert>;\r\n\r\n\r\n\r\n  messages = [];\r\n  positiveMessage = [];\r\n  neutralMessages = [];\r\n  negativeMessages = [];\r\n  noResultMessages=[];\r\n  connection;\r\n  message;\r\n  mood=1;\r\n\r\n\r\n  public doughnutChartLabels: string[] = ['Negative', 'Positive', 'Neutral'];\r\n  public doughnutChartData: number[] = [1, 1, 1];\r\n  public doughnutChartType: string = 'doughnut';\r\n  public doughtnutChartOptions: any = {\"animation\": \"false\"};\r\n\r\n  keywords = [];\r\n  activeKeywordIndex;\r\n\r\n  constructor(private chatService: ChatService) {\r\n    /*this.alerts.push({\r\n      type: 'success',\r\n      message: 'This is an success alert'\r\n    });*/\r\n    this.backup = this.alerts.map((alert: IAlert) => Object.assign({}, alert));\r\n  }\r\n\r\n  sendMessage(key) {\r\n    this.keywords.push(key.value);\r\n  }\r\n\r\n  start() {\r\n    console.log(\"inside start\");\r\n    this.chatService.startStream(this.keywords);\r\n  }\r\n\r\n  stop() {\r\n    this.chatService.stopStream();\r\n  }\r\n\r\n  public countChanged = false;\r\n\r\n  ngOnInit() {\r\n    setInterval(() => {\r\n      if (this.countChanged) {\r\n        this.doughnutChartData = [this.negativeMessages.length, this.positiveMessage.length, this.neutralMessages.length];\r\n        this.countChanged = false;\r\n      }\r\n    }, 2000);\r\n    this.connection = this.chatService.getMessages().subscribe(message => {\r\n      console.log(\"Message received\");\r\n      this.countChanged = true;\r\n      let response = <any> message;\r\n      let tweet = JSON.parse(response.text);\r\n      console.log(tweet);\r\n      if(tweet.message){\r\n        console.log(tweet.message);\r\n        var words = _.words(tweet.message);\r\n        console.log(words);\r\n        if(words.indexOf('down') > 0 || words.indexOf('ddos') > 0 || words.indexOf('hack') > 0){\r\n          console.log(tweet.message);\r\n          this.alerts.push({type: 'danger',message: tweet});\r\n          this.chatService.sendMail(tweet);\r\n        }\r\n      }\r\n      //console.log(JSON.parse(message));\r\n      this.messages.unshift(tweet);\r\n      if (tweet.sentiment == 'Negative' || tweet.miimg == 'Negative'  || (tweet.misenti > 0 && tweet.misenti <= 40 ) || (tweet.ibm.score > 0 && tweet.ibm.score <= 80 )) {\r\n        this.negativeMessages.unshift(tweet);\r\n      }else if (tweet.sentiment == 'Positive' || tweet.misenti >= 66 || tweet.ibm.score >= 132 || tweet.miimg == 'Positive') {\r\n        console.log({P: tweet});\r\n        this.positiveMessage.unshift(tweet);\r\n      } else if (tweet.sentiment == 'Neutral' || (tweet.misenti < 66 && tweet.misenti > 40 ) || (tweet.ibm.score < 132 && tweet.ibm.score > 80 ) || tweet.ibm.type == 'neutral' ) {\r\n        console.log({N: tweet});\r\n        this.neutralMessages.unshift(tweet);\r\n      } else if (tweet.sentiment == 'NoResult' || tweet.misent == 0 || tweet.ibm.score == 0) {\r\n        this.noResultMessages.unshift(tweet);\r\n      }\r\n      this.findMood();\r\n    })\r\n  }\r\n\r\n  public findMood(){\r\n    let totalCount = this.messages.length;\r\n    let positiveCount = this.positiveMessage.length;\r\n    let per = positiveCount * 100 / totalCount;\r\n    console.log(\"Finding MOOODDD:::::::::::::\");\r\n    if(per >= 80 ){\r\n      this.mood=1;\r\n    }else if(per < 80 && per >= 60){\r\n      this.mood=2;\r\n    }else if(per < 60 && per >= 40){\r\n      this.mood=3;\r\n    }else if(per < 40 && per >= 20){\r\n      this.mood=4;\r\n    }else if(per < 20){\r\n      this.mood=5;\r\n    }\r\nconsole.log(this.mood);\r\n  }\r\n\r\n  public closeAlert(alert: IAlert) {\r\n    const index: number = this.alerts.indexOf(alert);\r\n    this.alerts.splice(index, 1);\r\n  }\r\n\r\n  public reset() {\r\n    this.alerts = this.backup.map((alert: IAlert) => Object.assign({}, alert));\r\n  }\r\n  ngOnDestroy() {\r\n    this.connection.unsubscribe();\r\n  }\r\n}\r\n\r\nexport interface IAlert {\r\n  type: string;\r\n  message: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/hsbc/projects/dashboard/src/app/dashboard/dashboard.component.ts","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-jobs',\r\n  templateUrl: './jobs.component.html',\r\n  styleUrls: ['./jobs.component.css']\r\n})\r\nexport class JobsComponent{\r\n  google : any;\r\n  // lineChart\r\n  constructor(){\r\n    var data = this.google.visualization.arrayToDataTable([\r\n      ['Country', 'Popularity'],\r\n      ['Germany', 200],\r\n      ['United States', 300],\r\n      ['Brazil', 400],\r\n      ['Canada', 500],\r\n      ['France', 600],\r\n      ['RU', 700]\r\n    ]);\r\n\r\n    var options = {};\r\n\r\n    var chart = this.google.visualization.GeoChart(document.getElementById('regions_div'));\r\n\r\n    chart.draw(data, options);\r\n  }\r\n  public lineChartData:Array<any> = [\r\n    [65, 59, 80, 81, 56, 55, 40],\r\n    [28, 48, 40, 19, 86, 27, 90]\r\n  ];\r\n  public lineChartLabels:Array<any> = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n  public lineChartType:string = 'line';\r\n  public pieChartType:string = 'pie';\r\n\r\n  // Pie\r\n  public pieChartLabels:string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\r\n  public pieChartData:number[] = [300, 500, 100];\r\n\r\n  public randomizeType():void {\r\n    this.lineChartType = this.lineChartType === 'line' ? 'bar' : 'line';\r\n    this.pieChartType = this.pieChartType === 'doughnut' ? 'pie' : 'doughnut';\r\n  }\r\n\r\n  public chartClicked(e:any):void {\r\n    console.log(e);\r\n  }\r\n\r\n  public chartHovered(e:any):void {\r\n    console.log(e);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/hsbc/projects/dashboard/src/app/jobs/jobs.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 464;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/hsbc/projects/dashboard/src async\n// module id = 464\n// module chunks = 0","import './polyfills.ts';\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/hsbc/projects/dashboard/src/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { JobsComponent } from './jobs/jobs.component';\r\nimport {routing} from \"./app.routes\";\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport {ChatService} from \"./dashboard/chat-service\";\r\nimport {DoughnutChartDemoComponent} from \"./charts/doughtnut-chart.component\";\r\nimport {ChartsModule} from \"ng2-charts\";\r\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    JobsComponent,\r\n    DashboardComponent,\r\n    DoughnutChartDemoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    routing,\r\n    ChartsModule,\r\n    NgbModule.forRoot()\r\n  ],\r\n  providers: [ChatService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/hsbc/projects/dashboard/src/app/app.module.ts","import {JobsComponent} from \"./jobs/jobs.component\";\r\nimport { ModuleWithProviders }  from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\r\n\r\n\r\n// Route Configuration\r\nexport const routes: Routes = [\r\n  { path: 'jobs', component:  JobsComponent},\r\n  { path: 'dashboard', component:  DashboardComponent}\r\n];\r\n\r\n// Deprecated provide\r\n// export const APP_ROUTER_PROVIDERS = [\r\n//   provideRouter(routes)\r\n// ];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/hsbc/projects/dashboard/src/app/app.routes.ts","/**\r\n * Created by HSBC on 09-12-2016.\r\n */\r\nimport { Component } from '@angular/core';\r\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\r\n\r\n// webpack html imports\r\n\r\n@Component({\r\n  selector: 'doughnut-chart-demo',\r\n  templateUrl: './doughtnut-chart.component.html',\r\n})\r\nexport class DoughnutChartDemoComponent {\r\n  // Doughnut\r\n  public doughnutChartLabels:string[] = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\r\n  public doughnutChartData:number[] = [150, 450, 100];\r\n  public doughnutChartType:string = 'doughnut';\r\n\r\n  // events\r\n  public chartClicked(e:any):void {\r\n  //  console.log(e);\r\n  }\r\n\r\n  public chartHovered(e:any):void {\r\n   // console.log(e);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/hsbc/projects/dashboard/src/app/charts/doughtnut-chart.component.ts","export * from './app.component';\r\nexport * from './app.module';\r\n\n\n\n// WEBPACK FOOTER //\n// C:/hsbc/projects/dashboard/src/app/index.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/hsbc/projects/dashboard/src/environments/environment.ts","// This file includes polyfills needed by Angular 2 and is loaded before\r\n// the app. You can add your own extra polyfills to this file.\r\nimport 'core-js/es6/symbol';\r\nimport 'core-js/es6/object';\r\nimport 'core-js/es6/function';\r\nimport 'core-js/es6/parse-int';\r\nimport 'core-js/es6/parse-float';\r\nimport 'core-js/es6/number';\r\nimport 'core-js/es6/math';\r\nimport 'core-js/es6/string';\r\nimport 'core-js/es6/date';\r\nimport 'core-js/es6/array';\r\nimport 'core-js/es6/regexp';\r\nimport 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport 'core-js/es6/reflect';\r\n\r\nimport 'core-js/es7/reflect';\r\nimport 'zone.js/dist/zone';\r\n\n\n\n// WEBPACK FOOTER //\n// C:/hsbc/projects/dashboard/src/polyfills.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/hsbc/projects/dashboard/src/app/app.component.css\n// module id = 760\n// module chunks = 0","module.exports = \":host >>> .alert-custom {\\r\\n  color: white;\\r\\n  background-color: #d9534f;\\r\\n  border-color: #800040;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/hsbc/projects/dashboard/src/app/dashboard/dashboard.component.css\n// module id = 761\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/hsbc/projects/dashboard/src/app/jobs/jobs.component.css\n// module id = 762\n// module chunks = 0","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <nav class=\\\"navbar navbar-light bg-faded\\\">\\r\\n    <div class=\\\"nav navbar-nav\\\">\\r\\n      <a class=\\\"nav-item nav-link \\\" [routerLinkActive]=\\\"'active'\\\" [routerLink]=\\\"['/dashboard']\\\">Live</a>\\r\\n      <a class=\\\"nav-item nav-link\\\" [routerLinkActive]=\\\"'active'\\\" [routerLink]=\\\"['/jobs']\\\">Dashboard</a>\\r\\n    </div>\\r\\n  </nav>\\r\\n<hr/>\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/hsbc/projects/dashboard/src/app/app.component.html\n// module id = 764\n// module chunks = 0","module.exports = \"<div style=\\\"display: block\\\">\\r\\n  <canvas baseChart\\r\\n          [data]=\\\"doughnutChartData\\\"\\r\\n          [labels]=\\\"doughnutChartLabels\\\"\\r\\n          [chartType]=\\\"doughnutChartType\\\"\\r\\n          (chartHover)=\\\"chartHovered($event)\\\"\\r\\n          (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/hsbc/projects/dashboard/src/app/charts/doughtnut-chart.component.html\n// module id = 765\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3 col-md-3\\\">\\r\\n    <nav class=\\\"navbar navbar-light bg-faded\\\">\\r\\n      <form class=\\\"form-inline float-xs-left\\\">\\r\\n          <button class=\\\"btn btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"start()\\\">\\r\\n            <i class=\\\"fa fa-play\\\" style=\\\"padding-right:10px;\\\" aria-hidden=\\\"true\\\"></i>Start\\r\\n          </button>\\r\\n        <button class=\\\"btn btn btn-danger\\\" type=\\\"submit\\\" (click)=\\\"stop()\\\">\\r\\n          <i class=\\\"fa fa-stop\\\" style=\\\"padding-right:10px;\\\" aria-hidden=\\\"true\\\"></i>Stop</button>\\r\\n      </form>\\r\\n\\r\\n    </nav>\\r\\n    <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\r\\n      <h1><strong>Total Tweet: ({{messages.length}})</strong></h1>\\r\\n    </div>\\r\\n    <nav class=\\\"navbar navbar-light bg-faded\\\">\\r\\n      <form class=\\\"form-inline float-xs-left\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Keywords\\\" #key>\\r\\n        <button class=\\\"btn btn-outline-success\\\" type=\\\"submit\\\" (click)=\\\"sendMessage(key)\\\">Add</button>\\r\\n      </form>\\r\\n    </nav>\\r\\n    <div class=\\\"list-group\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"list-group-item list-group-item-action\\\"\\r\\n                *ngFor=\\\"let keyword of keywords;let idx = index\\\"\\r\\n                [class.active]=\\\" idx == activeKeywordIndex ? true : false\\\"\\r\\n                (click)=\\\"activeKeywordIndex=idx\\\">{{keyword}}</button>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n      <img [src]=\\\"'/assets/img/'+mood+'.png'\\\" />\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div style=\\\"display: block\\\">\\r\\n      <canvas baseChart\\r\\n              [data]=\\\"doughnutChartData\\\"\\r\\n              [labels]=\\\"doughnutChartLabels\\\"\\r\\n              [chartType]=\\\"doughnutChartType\\\"></canvas>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-sm-9 col-md-9\\\">\\r\\n    <p>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"alerts.length\\\" (click)=\\\"reset()\\\">Reset</button>\\r\\n    </p>\\r\\n\\r\\n    <p *ngFor=\\\"let alert of alerts\\\">\\r\\n      <ngb-alert type=\\\"custom\\\" (close)=\\\"closeAlert(alert)\\\">\\r\\n        <button class=\\\"btn btn btn-warning\\\" type=\\\"submit\\\" (click)=\\\"start()\\\">\\r\\n          Open Ticket\\r\\n        </button>\\r\\n        <button class=\\\"btn btn btn-info\\\" type=\\\"submit\\\" (click)=\\\"start()\\\">\\r\\n          Reply\\r\\n        </button>\\r\\n        <strong>HIGH ALERT!!! &nbsp;&nbsp;&nbsp; </strong>\\r\\n        {{ alert.message.message }}\\r\\n      </ngb-alert>\\r\\n    </p>\\r\\n\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\"><strong>Negative Tweets  ({{negativeMessages.length}})</strong></div>\\r\\n      <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"list-group\\\" style=\\\"max-height: 333px;min-height: 333px;overflow-y: auto;overflow-x: hidden;padding-right:7px;\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <table class=\\\"table table-hover\\\">\\r\\n              <thead>\\r\\n              <tr>\\r\\n                <th class=\\\"col-sm-2 col-md-2\\\">Microsoft</th>\\r\\n                <th class=\\\"col-sm-2 col-md-2\\\">IBM</th>\\r\\n                <th class=\\\"col-sm-1 col-md-1\\\">Mashape</th>\\r\\n                <th class=\\\"col-sm-1 col-md-1\\\">Image</th>\\r\\n                <th class=\\\"col-sm-6 col-md-6\\\">Tweet</th>\\r\\n              </tr>\\r\\n              </thead>\\r\\n            </table>\\r\\n            <!--<div class=\\\"col-sm-2 col-md-2\\\">Microsoft</div>\\r\\n            <div class=\\\"col-sm-2 col-md-2\\\">IBM</div>\\r\\n            <div class=\\\"col-sm-1 col-md-1\\\">Mashape</div>\\r\\n            <div class=\\\"col-sm-7 col-md-7\\\">Tweet</div>-->\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngFor=\\\"let message of negativeMessages\\\">\\r\\n            <div class=\\\"col-sm-2 col-md-2\\\">\\r\\n\\r\\n              <div class=\\\"text-xs-center\\\" id=\\\"example-caption-1\\\">{{message.misenti}}%</div>\\r\\n              <progress class=\\\"progress progress-danger\\\" [value]=\\\"message.misenti\\\" max=\\\"100\\\" aria-describedby=\\\"example-caption-2\\\"></progress>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2 col-md-2\\\">\\r\\n              <div class=\\\"text-xs-center\\\" id=\\\"example-caption-1\\\">{{message.ibm.score / 2}}%</div>\\r\\n              <progress class=\\\"progress progress-danger\\\" [value]=\\\"message.ibm.score\\\" max=\\\"200\\\" aria-describedby=\\\"example-caption-2\\\"></progress>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-1 col-md-1\\\">\\r\\n              <strong>{{message.sentiment}}</strong>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-1 col-md-1\\\">\\r\\n              <strong>{{message.miimg == \\\"NoResult\\\" ? \\\"-\\\": message.miimg}}</strong>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 col-md-6\\\">\\r\\n              <div  class=\\\"list-group-item list-group-item-action list-group-item-danger\\\">\\r\\n                <strong>{{message.message}}</strong>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\"><strong>Positive Tweets  ({{positiveMessage.length}})</strong></div>\\r\\n      <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"list-group\\\" style=\\\"max-height: 333px;min-height: 333px;overflow-y: auto;overflow-x: hidden;padding-right:7px;\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <table class=\\\"table table-hover\\\">\\r\\n              <thead>\\r\\n              <tr>\\r\\n                <th class=\\\"col-sm-2 col-md-2\\\">Microsoft</th>\\r\\n                <th class=\\\"col-sm-2 col-md-2\\\">IBM</th>\\r\\n                <th class=\\\"col-sm-1 col-md-1\\\">Mashape</th>\\r\\n                <th class=\\\"col-sm-1 col-md-1\\\">Image</th>\\r\\n                <th class=\\\"col-sm-6 col-md-6\\\">Tweet</th>\\r\\n              </tr>\\r\\n              </thead>\\r\\n            </table>\\r\\n            <!--<div class=\\\"col-sm-2 col-md-2\\\">Microsoft</div>\\r\\n            <div class=\\\"col-sm-2 col-md-2\\\">IBM</div>\\r\\n            <div class=\\\"col-sm-1 col-md-1\\\">Mashape</div>\\r\\n            <div class=\\\"col-sm-7 col-md-7\\\">Tweet</div>-->\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngFor=\\\"let message of positiveMessage\\\">\\r\\n            <div class=\\\"col-sm-2 col-md-2\\\">\\r\\n\\r\\n              <div class=\\\"text-xs-center\\\" id=\\\"example-caption-1\\\">{{message.misenti}}%</div>\\r\\n              <progress class=\\\"progress progress-success\\\" [value]=\\\"message.misenti\\\" max=\\\"100\\\" aria-describedby=\\\"example-caption-2\\\"></progress>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2 col-md-2\\\">\\r\\n              <div class=\\\"text-xs-center\\\" id=\\\"example-caption-1\\\">{{message.ibm.score / 2 }}%</div>\\r\\n              <progress class=\\\"progress progress-success\\\" [value]=\\\"message.ibm.score\\\" max=\\\"200\\\" aria-describedby=\\\"example-caption-2\\\"></progress>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-1 col-md-1\\\">\\r\\n              <strong>{{message.sentiment}}</strong>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-1 col-md-1\\\">\\r\\n              <strong>{{message.miimg == \\\"NoResult\\\" ? \\\"-\\\": message.miimg}}</strong>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 col-md-6\\\">\\r\\n              <div  class=\\\"list-group-item list-group-item-action list-group-item-success\\\">\\r\\n                <strong>{{message.message}}</strong>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\"><strong>Neutral Tweets ({{neutralMessages.length}})</strong></div>\\r\\n      <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"list-group\\\" style=\\\"max-height: 333px;min-height: 333px;overflow-y: auto;overflow-x: hidden;padding-right:7px;\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <table class=\\\"table table-hover\\\">\\r\\n              <thead>\\r\\n              <tr>\\r\\n                <th class=\\\"col-sm-2 col-md-2\\\">Microsoft</th>\\r\\n                <th class=\\\"col-sm-2 col-md-2\\\">IBM</th>\\r\\n                <th class=\\\"col-sm-1 col-md-1\\\">Mashape</th>\\r\\n                <th class=\\\"col-sm-1 col-md-1\\\">Image</th>\\r\\n                <th class=\\\"col-sm-6 col-md-6\\\">Tweet</th>\\r\\n              </tr>\\r\\n              </thead>\\r\\n            </table>\\r\\n          <!--  <div class=\\\"col-sm-2 col-md-2\\\">Microsoft</div>\\r\\n            <div class=\\\"col-sm-2 col-md-2\\\">IBM</div>\\r\\n            <div class=\\\"col-sm-1 col-md-1\\\">Mashape</div>\\r\\n            <div class=\\\"col-sm-7 col-md-7\\\">Tweet</div>-->\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngFor=\\\"let message of neutralMessages\\\">\\r\\n            <div class=\\\"col-sm-2 col-md-2\\\">\\r\\n\\r\\n              <div class=\\\"text-xs-center\\\" id=\\\"example-caption-1\\\">{{message.misenti}}%</div>\\r\\n              <progress class=\\\"progress progress-warning\\\" [value]=\\\"message.misenti\\\" max=\\\"100\\\" aria-describedby=\\\"example-caption-2\\\"></progress>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2 col-md-2\\\">\\r\\n              <div class=\\\"text-xs-center\\\" id=\\\"example-caption-1\\\">{{message.ibm.score / 2}}%</div>\\r\\n              <progress class=\\\"progress progress-warning\\\" [value]=\\\"message.ibm.score\\\" max=\\\"200\\\" aria-describedby=\\\"example-caption-2\\\"></progress>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-1 col-md-1\\\">\\r\\n              <strong>{{message.sentiment }}</strong>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-1 col-md-1\\\">\\r\\n              <strong>{{message.miimg == \\\"NoResult\\\" ? \\\"-\\\": message.miimg}}</strong>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6 col-md-6\\\">\\r\\n\\r\\n              <div  class=\\\"list-group-item list-group-item-action list-group-item-warning\\\">\\r\\n                <strong>{{message.message}}</strong>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--<div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\"><strong>Neutral Tweets ({{neutralMessages.length}})</strong></div>\\r\\n      <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"list-group\\\" style=\\\"max-height: 333px;min-height: 333px;overflow-y: auto;overflow-x: hidden;padding-right:7px;\\\">\\r\\n        <div *ngFor=\\\"let message of neutralMessages\\\" class=\\\"list-group-item list-group-item-action list-group-item-warning\\\">\\r\\n          {{message.message}}\\r\\n        </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>-->\\r\\n\\r\\n    <!--<div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\"><strong>Positive Tweets ({{positiveMessage.length}})</strong></div>\\r\\n      <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"list-group\\\" style=\\\"max-height: 333px;min-height: 333px;overflow-y: auto;overflow-x: hidden;padding-right:7px;\\\">\\r\\n          <div *ngFor=\\\"let message of positiveMessage\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n            {{message.message}}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>-->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\"><strong>Unproccessed Tweets ({{noResultMessages.length}})</strong></div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n      <div class=\\\"list-group\\\" style=\\\"max-height: 333px;min-height: 333px;overflow-y: auto;overflow-x: hidden;padding-right:7px;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <!--<div class=\\\"col-sm-2 col-md-2\\\">Microsoft</div>\\r\\n          <div class=\\\"col-sm-2 col-md-2\\\">IBM</div>\\r\\n          <div class=\\\"col-sm-1 col-md-1\\\">Mashape</div>\\r\\n          <div class=\\\"col-sm-1 col-md-1\\\">Image</div>\\r\\n          <div class=\\\"col-sm-7 col-md-7\\\">Tweet</div>-->\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngFor=\\\"let message of noResultMessages\\\">\\r\\n          <div class=\\\"col-sm-2 col-md-2\\\">\\r\\n\\r\\n            <div class=\\\"text-xs-center\\\" id=\\\"example-caption-1\\\">{{message.misenti}}%</div>\\r\\n            <progress class=\\\"progress progress-info\\\" [value]=\\\"message.misenti\\\" max=\\\"100\\\" aria-describedby=\\\"example-caption-2\\\"></progress>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2 col-md-2\\\">\\r\\n            <div class=\\\"text-xs-center\\\" id=\\\"example-caption-1\\\">{{message.ibm.score / 2}}%</div>\\r\\n            <progress class=\\\"progress progress-info\\\" [value]=\\\"message.ibm.score\\\" max=\\\"200\\\" aria-describedby=\\\"example-caption-2\\\"></progress>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-1 col-md-1\\\">\\r\\n            <strong>{{message.sentiment}}</strong>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-7 col-md-7\\\">\\r\\n            <div  class=\\\"list-group-item list-group-item-action list-group-item-info\\\">\\r\\n              <strong>{{message.message}}</strong>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n<!--\\r\\n\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\"><strong>Positive Tweets  ({{noResultMessages.length}})</strong></div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n      <div class=\\\"list-group\\\" style=\\\"max-height: 333px;min-height: 333px;overflow-y: auto;overflow-x: hidden;padding-right:7px;\\\">\\r\\n        <div class=\\\"row\\\" *ngFor=\\\"let message of noResultMessages\\\">\\r\\n          <div class=\\\"col-sm-2 col-md-2\\\">\\r\\n            <div class=\\\"text-xs-center\\\" id=\\\"example-caption-1\\\">{{message.misenti}}%</div>\\r\\n            <progress class=\\\"progress progress-success\\\" [value]=\\\"message.misenti\\\" max=\\\"100\\\" aria-describedby=\\\"example-caption-2\\\"></progress>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2 col-md-2\\\">\\r\\n            <strong>{{message.sentiment}}</strong>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-8 col-md-8\\\">\\r\\n            <div  class=\\\"list-group-item list-group-item-action list-group-item-info\\\">\\r\\n              <strong>{{message.message}}</strong>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n-->\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/hsbc/projects/dashboard/src/app/dashboard/dashboard.component.html\n// module id = 766\n// module chunks = 0","module.exports = \"<!--\\r\\n<div class=\\\"col-md-6\\\">\\r\\n\\r\\n  <canvas baseChart\\r\\n          [data]=\\\"lineChartData\\\"\\r\\n          [labels]=\\\"lineChartLabels\\\"\\r\\n          [options]=\\\"lineChartOptions\\\"\\r\\n          [chartType]=\\\"lineChartType\\\"\\r\\n          (chartHover)=\\\"chartHovered($event)\\\"\\r\\n          (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n</div>\\r\\n<div class=\\\"col-md-6\\\">\\r\\n  <canvas baseChart\\r\\n          [data]=\\\"pieChartData\\\"\\r\\n          [labels]=\\\"pieChartLabels\\\"\\r\\n          [chartType]=\\\"pieChartType\\\"\\r\\n          (chartHover)=\\\"chartHovered($event)\\\"\\r\\n          (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n</div>\\r\\n<div class=\\\"col-md-12 text-center\\\" style=\\\"margin-top: 10px;height: 50%\\\">\\r\\n  <button (click)=\\\"randomizeType()\\\" style=\\\"display: inline-block\\\">Toggle</button>\\r\\n</div>\\r\\n-->\\r\\n\\r\\n  <script type=\\\"text/javascript\\\" src=\\\"https://www.gstatic.com/charts/loader.js\\\"></script>\\r\\n  <script type=\\\"text/javascript\\\">\\r\\n    google.charts.load('upcoming', {'packages':['geochart']});\\r\\n    google.charts.setOnLoadCallback(drawRegionsMap);\\r\\n\\r\\n    function drawRegionsMap() {\\r\\n\\r\\n      var data = google.visualization.arrayToDataTable([\\r\\n        ['Country', 'Popularity'],\\r\\n        ['Germany', 200],\\r\\n        ['United States', 300],\\r\\n        ['Brazil', 400],\\r\\n        ['Canada', 500],\\r\\n        ['France', 600],\\r\\n        ['RU', 700]\\r\\n      ]);\\r\\n\\r\\n      var options = {};\\r\\n\\r\\n      var chart = new google.visualization.GeoChart(document.getElementById('regions_div'));\\r\\n\\r\\n      chart.draw(data, options);\\r\\n    }\\r\\n  </script>\\r\\n<div id=\\\"regions_div\\\" style=\\\"width: 900px; height: 500px;\\\"></div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/hsbc/projects/dashboard/src/app/jobs/jobs.component.html\n// module id = 767\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 798\n// module chunks = 0"],"sourceRoot":""}